[==================================
Id: 1
ExeStack:
a=1;b=2;c=3;writeFile(example.txt, a);writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
a=1
b=2;c=3;writeFile(example.txt, a);writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
b=2;c=3;writeFile(example.txt, a);writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
b=2
c=3;writeFile(example.txt, a);writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
c=3;writeFile(example.txt, a);writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
c=3
writeFile(example.txt, a);writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
writeFile(example.txt, a);writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
writeFile(example.txt, a)
writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
writeFile(example.txt, b);writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
writeFile(example.txt, b)
writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
writeFile(example.txt, c);closeFile(example.txt)

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
writeFile(example.txt, c)
closeFile(example.txt)

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:
closeFile(example.txt)

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][==================================
Id: 1
ExeStack:

SymbolTable:
c -> 3
b -> 2
a -> 1

Heap:

File Table:
example.txt -> File opened by 1with the content: null

Output:
][][==================================
Id: 1
ExeStack:
new( v1, 2) 
new( v2, 3) ;new( v3, 4) ;newLatch(cnt, 3);fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:

Heap:

File Table:

Latch Table:

Output:
][==================================
Id: 1
ExeStack:
new( v2, 3) ;new( v3, 4) ;newLatch(cnt, 3);fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v1 -> 1

Heap:
1 -> 2

File Table:

Latch Table:

Output:
][==================================
Id: 1
ExeStack:
new( v2, 3) 
new( v3, 4) ;newLatch(cnt, 3);fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v1 -> 1

Heap:
1 -> 2

File Table:

Latch Table:

Output:
][==================================
Id: 1
ExeStack:
new( v3, 4) ;newLatch(cnt, 3);fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v2 -> 2
v1 -> 1

Heap:
2 -> 3
1 -> 2

File Table:

Latch Table:

Output:
][==================================
Id: 1
ExeStack:
new( v3, 4) 
newLatch(cnt, 3);fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v2 -> 2
v1 -> 1

Heap:
2 -> 3
1 -> 2

File Table:

Latch Table:

Output:
][==================================
Id: 1
ExeStack:
newLatch(cnt, 3);fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1

Heap:
3 -> 4
2 -> 3
1 -> 2

File Table:

Latch Table:

Output:
][==================================
Id: 1
ExeStack:
newLatch(cnt, 3)
fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1

Heap:
3 -> 4
2 -> 3
1 -> 2

File Table:

Latch Table:

Output:
][==================================
Id: 1
ExeStack:
fork(wH(v1,  (rH(v1)*10) ));print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 2

File Table:

Latch Table:
1 -> 3

Output:
][==================================
Id: 1
ExeStack:
fork(wH(v1,  (rH(v1)*10) ))
print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 2

File Table:

Latch Table:
1 -> 3

Output:
][==================================
Id: 10
ExeStack:
wH(v1,  (rH(v1)*10) )

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 2

File Table:

Latch Table:
1 -> 3

Output:
, ==================================
Id: 1
ExeStack:
print(rH(v1));countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 2

File Table:

Latch Table:
1 -> 3

Output:
][==================================
Id: 1
ExeStack:
print(rH(v1))
countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 3

Output:
, ==================================
Id: 10
ExeStack:

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 3

Output:
][==================================
Id: 1
ExeStack:
countDown(cnt);fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 3

Output:
 20][==================================
Id: 1
ExeStack:
countDown(cnt)
fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 3

Output:
 20][==================================
Id: 1
ExeStack:
fork(wH(v2,  (rH(v2)*10) ));print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20][==================================
Id: 1
ExeStack:
fork(wH(v2,  (rH(v2)*10) ))
print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20][==================================
Id: 10
ExeStack:
wH(v2,  (rH(v2)*10) )

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20, ==================================
Id: 1
ExeStack:
print(rH(v2));countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 3
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20][==================================
Id: 1
ExeStack:
print(rH(v2))
countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20, ==================================
Id: 10
ExeStack:

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20][==================================
Id: 1
ExeStack:
countDown(cnt);fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20 30][==================================
Id: 1
ExeStack:
countDown(cnt)
fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 2

Output:
 20 30][==================================
Id: 1
ExeStack:
fork(wH(v3,  (rH(v3)*10) ));print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30][==================================
Id: 1
ExeStack:
fork(wH(v3,  (rH(v3)*10) ))
print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30][==================================
Id: 10
ExeStack:
wH(v3,  (rH(v3)*10) )

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30, ==================================
Id: 1
ExeStack:
print(rH(v3));countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 4
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30][==================================
Id: 1
ExeStack:
print(rH(v3))
countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30, ==================================
Id: 10
ExeStack:

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30][==================================
Id: 1
ExeStack:
countDown(cnt);await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30 40][==================================
Id: 1
ExeStack:
countDown(cnt)
await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 1

Output:
 20 30 40][==================================
Id: 1
ExeStack:
await(cnt);print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40][==================================
Id: 1
ExeStack:
await(cnt)
print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40][==================================
Id: 1
ExeStack:
print(cnt);countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40][==================================
Id: 1
ExeStack:
print(cnt)
countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40][==================================
Id: 1
ExeStack:
countDown(cnt);print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40 1][==================================
Id: 1
ExeStack:
countDown(cnt)
print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40 1][==================================
Id: 1
ExeStack:
print(cnt)

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40 1][==================================
Id: 1
ExeStack:

SymbolTable:
v3 -> 3
v2 -> 2
v1 -> 1
cnt -> 1

Heap:
3 -> 40
2 -> 30
1 -> 20

File Table:

Latch Table:
1 -> 0

Output:
 20 30 40 1 1]